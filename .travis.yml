env:
  global:
  - CCACHE_DIR=$HOME/.ccache
  - CMAKE_BUILD="mkdir Build; cd Build; cmake ..; make -j$(nproc) -l$(nproc)"
  - CMAKE_UNIT_TEST_BUILD="mkdir Build; cd Build; cmake -DENABLE_UNIT_TESTS=On ..;
    make -j$(nproc) -l$(nproc); make -j$(nproc) test"
  - CATKIN_BUILD="mkdir -p ~/catkin_ws/src; cd ~/catkin_ws; catkin init; ln -s ${TRAVIS_BUILD_DIR}
    src; catkin build -j$(nproc) -l$(nproc) -DBUILD_ROS_INTERFACE=ON; cd build/mavlink_sitl_gazebo/;
    catkin run_tests"
  - KINETIC="source /opt/ros/kinetic/setup.bash; ${CATKIN_BUILD}"
  - MELODIC="source /opt/ros/melodic/setup.bash; ${CATKIN_BUILD}"
branches:
  only:
  - master
matrix:
  include:
  - name: CMake build (Gazebo 7)
    os: linux
    language: cpp
    services:
    - docker
    cache:
      ccache: true
    env:
    - PX4_DOCKER_REPO=px4io/px4-dev-simulation-xenial:2020-06-20
    - BUILD=${CMAKE_BUILD}
  - name: CMake unit tests build and run (Gazebo 7)
    os: linux
    language: cpp
    services:
    - docker
    cache:
      ccache: true
    env:
    - PX4_DOCKER_REPO=px4io/px4-dev-simulation-xenial:2020-06-20
    - BUILD=${CMAKE_UNIT_TEST_BUILD}
  - name: CMake build (Gazebo 9)
    os: linux
    language: cpp
    services:
    - docker
    cache:
      ccache: true
    env:
    - PX4_DOCKER_REPO=px4io/px4-dev-simulation-bionic:2020-06-20
    - BUILD=${CMAKE_BUILD}
  - name: CMake unit tests build and run (Gazebo 9)
    os: linux
    language: cpp
    services:
    - docker
    cache:
      ccache: true
    env:
    - PX4_DOCKER_REPO=px4io/px4-dev-simulation-bionic:2020-06-20
    - BUILD=${CMAKE_UNIT_TEST_BUILD}
  - name: Validate SDF schemas
    os: linux
    language: cpp
    services:
    - docker
    cache:
      ccache: true
    env:
    - PX4_DOCKER_REPO=px4io/px4-dev-simulation-bionic:2020-06-20
    - BUILD="source ./scripts/validate_sdf.bash"
before_install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; git clone -b release-1.10.0
  https://github.com/google/googletest; git clone --depth 1 https://github.com/mavlink/c_library_v2.git
  /usr/local/include/mavlink/v2.0; fi
install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then pushd googletest; mkdir build; pushd build;
  cmake ..; make; make install; popd; popd; brew unlink python@2; brew install gstreamer
  gst-plugins-base gst-plugins-good glib python; brew tap PX4/px4; brew install px4-dev;
  brew install px4-sim; pip3 install --user --upgrade setuptools; pip3 install --user
  --upgrade rospkg pyserial empy toml numpy pandas jinja2; fi
after_install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cleanup; rm -rf /usr/local/include/mavlink/v2.0/.git
  googletest/.git; fi
script:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo $PYTHONPATH; mkdir build; (cd build
  && cmake -DENABLE_UNIT_TESTS=On .. && make -j$(sysctl -n hw.physicalcpu) -l$(sysctl
  -n hw.physicalcpu) && make test); else docker run -it --rm -w ${TRAVIS_BUILD_DIR}
  --env=CCACHE_DIR="${CCACHE_DIR}" --volume=${CCACHE_DIR}:${CCACHE_DIR}:rw --volume=${TRAVIS_BUILD_DIR}:${TRAVIS_BUILD_DIR}:rw
  ${PX4_DOCKER_REPO} /bin/bash -e -c "${BUILD}"; fi

notifications:
  slack:
    secure: WcbUxU9TDupZC94fHhC9iFoJTV+q0MYcdym/jP5oPJ1Y5473CvAQk4bxUQL3juMdUzGggbDhEiQW1QziYZO6DeNegPCb+pCWdYRv7fSSne3kY9kFhutE34za4lJVsfd9fMGYOtooIIofK81pxGdnoge5o57ET/MsJVVORhwu/Tn6M+rmTX7on5jL8NUZ6xju7T3Y0bjHFuM/zOm5rTnLWooBesMKWQE9J/yr0L7vlkrhsWPKHR7mPo33FP0e5WbNIMXjNPOARTrId98v63jAeNYkUFAOuJC8/5ZPM+at7INoOi4FuzCV522IO/Vqhb8yMP4oRFp27l0Akp4RFTHBUiNO4EDsOx5CC0oSybRwyEVtpn+uK/zXaR36+E4S44dYA9P9Akur9popB4DdNUQiENILU8LlBMmRaDKDHdiWKy7NveZ6P/WUstT7YEx7pRMr+gDTWe8SgcU7Oz7FLcX1JI/dO1kps+vFLPZPgc0TENcYmHJLTctB5RLQ8LBiHCyyl20Bk9mjFfgaZiMEwlYyhIAxAxUt8zxxKw3kyj7LgBl+vybZYHOPBNKU81gqakqSg3R1Qj8MxQkRMaUHIn4BknFeN5CBs0iGRwfX38VmxHGZLpdtHhCyr1dA69uE/hMW0OIbocgwdgwHeb18x6ahfWmmPl4Dy5xtBiFW7TCISs4=
